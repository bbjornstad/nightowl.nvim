local env = {}

function env.load_scheme(scheme, opts)
  opts = opts or {}
  local cs_has_lua, csmod = pcall(require, scheme)
  local load_ok, load_res
  if cs_has_lua then
    load_ok, load_res = pcall(csmod.load)
  end
  if not load_ok then
    if not opts.suppress_warning then
      require("funsak.lazy").warn(
        ("Could not load scheme using lua: %s\nmsg: %s\nAttempting to load using vim"):format(
          scheme,
          load_res
        )
      )
    end
    local vload_ok, vload_res =
      pcall(vim.cmd, ("colorscheme %s"):format(scheme))
    if not vload_ok then
      if not opts.suppress_warning then
        require("funsak.lazy").warn(
          ("Could not load scheme using vim fallback: %s\nmsg: %s\nAttempting to load using vim"):format(
            scheme,
            vload_res
          )
        )
      end
    end
  end
end

local function configer(plugin, op)
  op = op or {}
  op.hooks = op.hooks or {}
  return function(plg, opts)
    if op.hooks.before then
      op.hooks.before(plg, opts)
    end
    require(plugin).setup(opts)
    if op.hooks.after then
      op.hooks.after(plg, opts)
    end
  end
end

local environment_def_scheme = os.getenv("NIGHTOWL_COLORSCHEME")
env.colorscheme = {
  light = environment_def_scheme or "dawnfox",
  dark = environment_def_scheme or "kanagawa",
}

-- UI: Borders
-- ===========
-- Spec is that the main border should be shadow. We want this to apply to all
-- borders that are not made by mason or lazy, the package management tools.
-- Those receive the alt border. An accent border is also reserved for cases
-- when the main border is not appropriately readable, typically because the
-- window size is small.
env.borders = {
  main = "shadow",
  alt = "solid",
  main_accent = "single",
  telescope = { "═", "┆", "═", "┆", "╒", "╕", "╛", "╘" },
}

env.telescope = {
  theme = "ivy",
}

env.ft_ignore_list = {
  "oil",
  "Outline",
  "dashboard",
  "fzf",
  "trouble",
  "toggleterm",
  "outline",
  "qf",
  "TelescopePrompt",
  "Telescope",
  "tsplayground",
  "spectre_panel",
  "undotree",
  "undotreeDiff",
  "neo-tree",
  "Lazy",
  "dropbar_menu",
  "noice",
  "nnn",
  "prompt",
  "broot",
  "gundo",
  "NvimTree",
  "spaceport",
  "alpha",
}

env.ft_ignore_list_alt = vim.iter(env.ft_ignore_list):fold({}, function(t, v)
  return vim.tbl_deep_extend("force", t, { [v] = true })
end)

-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
-- Lualine: icons and other themes
-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

env.icons = {
  actions = {
    quickfix = "󱍔",
    refactor = "󱐌",
    source = "󰿨",
    combined = "󰴖", -- used when combine is set to true or as a fallback when there is no action kind
  },
  mason = {
    package = {
      installed = "󱧘",
      pending = "󰏗",
      uninstalled = "󱧙",
    },
  },
  lualine = {
    mode = {
      ["NORMAL"] = "󰩷 ",
      ["INSERT"] = "󰟵 ",
      ["VISUAL"] = "󰠡 ",
      ["REPLACE"] = " ",
      ["O-PENDING"] = "󱖲 ",
      ["BLOCK"] = "󰙟 ",
      ["LINE"] = "󰘤 ",
      ["EX"] = "󱐌 ",
      ["TERMINAL"] = " ",
      ["COMMAND"] = " ",
      ["SHELL"] = " ",
      ["CONFIRM"] = "󱔳 ",
    },
  },
  kinds = {
    Array = "󰅪 ",
    Boolean = " ",
    CaseStatement = "󰚔 ",
    Class = " ",
    Codeium = "󰆨 ",
    Color = "󱠓 ",
    Control = " ",
    Collapsed = "󰘤 ",
    Constant = "󰳄 ",
    Constructor = " ",
    Copilot = " ",
    Enum = " ",
    EnumMember = " ",
    Event = " ",
    Field = "󰓼 ",
    File = "󰈤 ",
    Folder = "󰉖 ",
    Function = "󰡱 ",
    Interface = "󰸻 ",
    Key = "󰷖 ",
    Keyword = " ",
    Method = "󰡱 ",
    Module = " ",
    Namespace = " ",
    Null = "󰒅 ",
    Number = "󰎠 ",
    Object = "󰮄 ",
    Operator = " ",
    Package = " ",
    Property = "󰓽 ",
    Reference = "󰮳 ",
    Snippet = "󱂕 ",
    String = " ",
    Struct = " ",
    TabNine = "󱤬 ",
    Text = "󰪸 ",
    TypeParameter = " ",
    Unit = " ",
    Value = " ",
    Variable = " ",
  },
  diagnostic = {
    Error = "󰳦 ",
    Warn = "󱇏 ",
    Hint = "󰳧 ",
    Info = "󰳤 ",
  },
  modifications = {
    modified = "󰷉 ",
    readonly = "󱀰 ",
    unnamed = "󱔘 ",
    newfile = "󱪞 ",
  },
  gitdiff = {
    added = "󰜄 ",
    removed = "󰛲 ",
    modified = "󰏭 ",
  },
  misc = {
    Ok = "󰄵 ",
  },
  braille = {
    "⠀",
    "⠐",
    "⠠",
    "⠰",
    "⡀",
    "⡐",
    "⡠",
    "⡰",
    "⢀",
    "⢐",
    "⢠",
    "⢰",
    "⣀",
    "⣐",
    "⣠",
    "⣰",
    "⠁",
    "⠑",
    "⠡",
    "⠱",
    "⡁",
    "⡑",
    "⡡",
    "⡱",
    "⢁",
    "⢑",
    "⢡",
    "⢱",
    "⣁",
    "⣑",
    "⣡",
    "⣱",
    "⠂",
    "⠒",
    "⠢",
    "⠲",
    "⡂",
    "⡒",
    "⡢",
    "⡲",
    "⢂",
    "⢒",
    "⢢",
    "⢲",
    "⣂",
    "⣒",
    "⣢",
    "⣲",
    "⠃",
    "⠓",
    "⠣",
    "⠳",
    "⡃",
    "⡓",
    "⡣",
    "⡳",
    "⢃",
    "⢓",
    "⢣",
    "⢳",
    "⣃",
    "⣓",
    "⣣",
    "⣳",
    "⠄",
    "⠔",
    "⠤",
    "⠴",
    "⡄",
    "⡔",
    "⡤",
    "⡴",
    "⢄",
    "⢔",
    "⢤",
    "⢴",
    "⣄",
    "⣔",
    "⣤",
    "⣴",
    "⠅",
    "⠕",
    "⠥",
    "⠵",
    "⡅",
    "⡕",
    "⡥",
    "⡵",
    "⢅",
    "⢕",
    "⢥",
    "⢵",
    "⣅",
    "⣕",
    "⣥",
    "⣵",
    "⠆",
    "⠖",
    "⠦",
    "⠶",
    "⡆",
    "⡖",
    "⡦",
    "⡶",
    "⢆",
    "⢖",
    "⢦",
    "⢶",
    "⣆",
    "⣖",
    "⣦",
    "⣶",
    "⠇",
    "⠗",
    "⠧",
    "⠷",
    "⡇",
    "⡗",
    "⡧",
    "⡷",
    "⢇",
    "⢗",
    "⢧",
    "⢷",
    "⣇",
    "⣗",
    "⣧",
    "⣷",
    "⠈",
    "⠘",
    "⠨",
    "⠸",
    "⡈",
    "⡘",
    "⡨",
    "⡸",
    "⢈",
    "⢘",
    "⢨",
    "⢸",
    "⣈",
    "⣘",
    "⣨",
    "⣸",
    "⠉",
    "⠙",
    "⠩",
    "⠹",
    "⡉",
    "⡙",
    "⡩",
    "⡹",
    "⢉",
    "⢙",
    "⢩",
    "⢹",
    "⣉",
    "⣙",
    "⣩",
    "⣹",
    "⠊",
    "⠚",
    "⠪",
    "⠺",
    "⡊",
    "⡚",
    "⡪",
    "⡺",
    "⢊",
    "⢚",
    "⢪",
    "⢺",
    "⣊",
    "⣚",
    "⣪",
    "⣺",
    "⠋",
    "⠛",
    "⠫",
    "⠻",
    "⡋",
    "⡛",
    "⡫",
    "⡻",
    "⢋",
    "⢛",
    "⢫",
    "⢻",
    "⣋",
    "⣛",
    "⣫",
    "⣻",
    "⠌",
    "⠜",
    "⠬",
    "⠼",
    "⡌",
    "⡜",
    "⡬",
    "⡼",
    "⢌",
    "⢜",
    "⢬",
    "⢼",
    "⣌",
    "⣜",
    "⣬",
    "⣼",
    "⠍",
    "⠝",
    "⠭",
    "⠽",
    "⡍",
    "⡝",
    "⡭",
    "⡽",
    "⢍",
    "⢝",
    "⢭",
    "⢽",
    "⣍",
    "⣝",
    "⣭",
    "⣽",
    "⠎",
    "⠞",
    "⠮",
    "⠾",
    "⡎",
    "⡞",
    "⡮",
    "⡾",
    "⢎",
    "⢞",
    "⢮",
    "⢾",
    "⣎",
    "⣞",
    "⣮",
    "⣾",
    "⠏",
    "⠟",
    "⠯",
    "⠿",
    "⡏",
    "⡟",
    "⡯",
    "⡿",
    "⢏",
    "⢟",
    "⢯",
    "⢿",
    "⣏",
    "⣟",
    "⣯",
    "⣿",
  },
  playing_cards = {
    "🂠",
    "🂡",
    "🂢",
    "🂣",
    "🂤",
    "🂥",
    "🂦",
    "🂧",
    "🂨",
    "🂩",
    "🂪",
    "🂫",
    "🂬",
    "🂭",
    "🂮",
    "🂱",
    "🂲",
    "🂳",
    "🂴",
    "🂵",
    "🂶",
    "🂷",
    "🂸",
    "🂹",
    "🂺",
    "🂻",
    "🂼",
    "🂽",
    "🂾",
    "🂿",
    "🃁",
    "🃂",
    "🃃",
    "🃄",
    "🃅",
    "🃆",
    "🃇",
    "🃈",
    "🃉",
    "🃊",
    "🃋",
    "🃌",
    "🃍",
    "🃎",
    "🃏",
    "🃑",
    "🃒",
    "🃓",
    "🃔",
    "🃕",
    "🃖",
    "🃗",
    "🃘",
    "🃙",
    "🃚",
    "🃛",
    "🃜",
    "🃝",
    "🃞",
    "🃟",
  },
  dominoes = {
    "🁤",
    "🁰",
    "🂀",
    "🂐",
    "🁥",
    "🁱",
    "🂁",
    "🂑",
    "🁦",
    "🁲",
    "🂂",
    "🂒",
    "🁧",
    "🁳",
    "🂃",
    "🂓",
    "🁨",
    "🁴",
    "🂄",
    "🁩",
    "🁵",
    "🂅",
    "🁪",
    "🁶",
    "🂆",
    "🁫",
    "🁷",
    "🂇",
    "🁬",
    "🁸",
    "🂈",
    "🁭",
    "🁹",
    "🂉",
    "🁮",
    "🁺",
    "🂊",
    "🁯",
    "🁻",
    "🂋",
    "🁼",
    "🂌",
    "🁽",
    "🂍",
    "🁾",
    "🂎",
    "🁿",
    "🂏",
  },
}
env.icons.cursorsigns = {
  head = env.icons.dominoes,
  body = env.icons.braille,
  tail = env.icons.braille,
}

env.padding = {
  noice = {
    main = { 2, 3 },
    small = { 1, 2 },
    large = { 3, 4 },
  },
}

-- should probably go into a different file
env.oil = {
  init_columns = "succinct",
  columns = {
    extended = {
      "icon",
      "type",
      "permissions",
      "birthtime",
      "atime",
      "mtime",
      "ctime",
      "size",
    },
    succinct = {
      "icon",
      "type",
      "ctime",
      "size",
    },
  },
}

env.column_rulers = { "+1", "+20" }

env.norg = {}
env.norg.icons = {
  todo = {
    cancelled = { icon = "󰜺" },
    pending = { icon = "󱅤" },
    on_hold = { icon = "󰵞" },
    recurring = { icon = "󰑖" },
    uncertain = { icon = "󱔢" },
    done = { icon = "󰡕" },
    undone = { icon = " " },
    urgent = { icon = "" },
  },
}

env.icons.norg = {
  todo = {
    cancelled = { icon = "󰜺" },
    pending = { icon = "󱅤" },
    on_hold = { icon = "󰵞" },
    recurring = { icon = "󰑖" },
    uncertain = { icon = "󱔢" },
    done = { icon = "󰡕" },
    undone = { icon = " " },
    urgent = { icon = "" },
  },
}

return env
