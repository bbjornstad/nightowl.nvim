-- SPDX-FileCopyrightText: 2024 Bailey Bjornstad | ursa-major <bailey@bjornstad.dev>
-- SPDX-License-Identifier: MIT

-- MIT License

--  Copyright (c) 2024 Bailey Bjornstad | ursa-major bailey@bjornstad.dev

-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:

-- The above copyright notice and this permission notice (including the next
-- paragraph) shall be included in all copies or substantial portions of the
-- Software.

-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-- SOFTWARE.

---@module "parliament.plugins.status" statusline reconfiguration using
---heirline.nvim and friends.
---@author Bailey Bjornstad | ursa-major
---@license MIT

-- vim: set ft=lua:

local comp = require("environment.status.component")
local Align = { provider = "%=" }
local Space = { provider = " " }

local cmdr = require("funsak.autocmd").autocmdr("Heirline", true)

local function tweezer(tbl)
  return function(name)
    tbl = type(tbl) == "string" and require(tbl) or tbl
    if vim.is_callable(tbl) then
      tbl = tbl()
    end
    return name and tbl[name] or tbl
  end
end

local util = tweezer("heirline.utils")
local cond = tweezer("heirline.conditions")

local gen_colormapper = comp.colormap({})

return {
  {
    "rebelot/heirline.nvim",
    event = "VeryLazy",
    opts = function(_, opts)
      opts.statusline = {
        static = {
          mode_color_map = gen_colormapper(),
          mode_color = function(self, mode)
            mode = require("heirline.conditions").is_active and mode or "n"

            return self.mode_color_map[mode]
          end,
        },
        comp.mode({}),
        comp.git.branch({}),
      }
      opts.winbar = {}
      opts.tabline = {}
    end,
    init = function()
      cmdr({ "ColorScheme" }, {
        callback = function(ev)
          require("heirline.utils").on_colorscheme(gen_colormapper)
        end,
      })
    end,

    config = function(_, opts)
      require("heirline").setup(opts)
    end,
    dependencies = {
      "folke/noice.nvim",
      "cbochs/grapple.nvim",
      "jcdickinson/wpm.nvim",
      "Lamby777/timewasted.nvim",
    },
  },
}
